"use strict";

//Task 1  Объясните почему код даёт именно такие результаты?
//пример 1 
let a = 1, b = 1, c, d; 
c = ++a; 
alert(c); // ответ: 2 
// тк используется предфиксный инкремент то возвращается a +1


//пример 2 
d = b++; 
alert(d); //ответ: 1 
// тк используется постфиксный инкремент то возвращается значение до операции инкремента b

//пример 3 
c = 2 + ++a; 
alert(c); //ответ: 5 
// получаем 5 тк a = 2, после инкремента a = 3

//пример 4 
d = 2 + b++; 
alert(d); //ответ: 4 
// получаем 4 тк в примере 2 мы уже применили инкремент к b. При первом запросе результата возвращалось старое значение. А сейчас мы запросили результат второй раз и получаем новое значение 2. 

alert(a); //3 тк в примере 3 мы сделали инкреметр
alert(b); //3 тк мы в 4-м примере применили постфиксный инкремент и тут получаем новое значение b

//Task 2  Чему будут равны переменные x и f в примере ниже? Написать почему так произошло (описать последовательность действий).
let f = 2; // объявляем переменную f и записываем в нее значение 2
let x = 1 + (f *= 2); // оператором *= мы умножаем значение переменой f на 2 и записываем значение в f (4). Результат складываем с 1. Получаем x = 5, f = 4.


//Task 3   Объявить две переменные a и b и задать им целочисленные произвольные начальные значения.
//Затем написать скрипт, который работает по следующему принципу:
//- если a и b положительные, вывести их разность (ноль можно считать положительным числом);
//- если а и b отрицательные, вывести их произведение;
//- * (этот пункт по сложнее, делайте по желанию) если а и b разных знаков, вывести их сумму;
//Подсказка, чтобы сделать последний пункт можно также попробовать погуглить по запросу «получить знак числа javascript»

let g = -10;
let p = -5;
if (g > 0 && p > 0) alert(g - p)
else if (g < 0 && p < 0) alert(g * p)
else alert(g + p)

//Task 4   Реализовать основные 4 арифметические операции (+, -, /, *) в виде функций с двумя параметрами. Т.е. например, функция для сложения должна принимать два числа, складывать их и возвращать результат.
//Обязательно использовать оператор return.
function union(x, y){
    return "Сумма " + (x + y)
}

function factum(x, y){
    return "Произведение " + (x * y)
}

function difference(x, y){
    return "Разность " + (x - y)
}

function fraction(x, y){
    return "Частное " + (x / y)
}

//alert(union(10, 5));
//alert(factum(10, 5));
//alert(difference(10, 5));
//alert(fraction(10, 5));

//Task 5  Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation), где arg1, arg2 – значения аргументов, operation – строка с названием операции. В зависимости от переданного значения операции (использовать switch) выполнить одну из арифметических операций (использовать функции из задания 4) и вернуть полученное значение.

function calc(arg1, arg2, operation){
    switch (operation){
        case "uni":
            return union(arg1, arg2)
        case "fac":
            return factum(arg1, arg2)
        case "dif":
            return difference(arg1, arg2)
        case "fra":
            return fraction(arg1, arg2)
        default:
            return alert("Error");
    }
}

alert(calc(10, 5, "uni"));

//Task 6**  (Сложное задание, требует времени и возможно гугления, делайте по желанию.) Программа должна спросить у пользователя число, это будет количество денег, которое он хочет положить на счет в банке. Затем программа должна выдать примерно такое сообщение:
//"Ваша сумма в 101 рубль успешно зачислена." - в случае если пользователь ввел 101.
//"Ваша сумма в 10020 рублей успешно зачислена." - в случае если пользователь ввел 10020.
//"Ваша сумма в 120104 рубля успешно зачислена." - в случае если пользователь ввел 120104.
//То есть ваша задача выводить слово «рубль» в правильном падеже, в зависимости от введенного числа.